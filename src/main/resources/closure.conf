{
    "program-not-lifting": [
        "com.google.javascript.jscomp.AbstractCommandLineRunner\\$FlagUsageException"
        "com/google/javascript/jscomp/deps/SortedDependencies\\$CircularDependencyException"
        "com/google/javascript/jscomp/deps/SortedDependencies\\$MissingProvideException"
        "com/google/javascript/jscomp/JSModuleGraph\\$ModuleDependenceException"
        "com/google/javascript/jscomp/JsMessageVisitor\\$MalformedException"
        "com/google/javascript/rhino/head/EcmaError"
        "com/google/javascript/rhino/head/RhinoException"
        "com/google/javascript/rhino/head/EvaluatorException"
        "com/google/javascript/rhino/head/WrappedException"
        "com/google/javascript/jscomp/deps/JsFileLineParser\\$ParseException"
        "com/google/javascript/jscomp/DataFlowAnalysis\\$MaxIterationsExceededException"
        "com/google/debugging/sourcemap/SourceMapParseException"
        "com/google/javascript/rhino/RhinoException"
        "com/google/javascript/rhino/EvaluatorException"
        "com/google/javascript/jscomp/AbstractCompilerRunner\\$FlagUsageException"
        "com/google/javascript/jscomp/JSModuleGraph\\$MissingModuleException"

        "com/google/javascript/jscomp/CommandLineRunner\\$Flags\\$BooleanOptionHandler"
        "com.google.javascript.jscomp.AbstractCommandLineRunner\\$WarningGuardSpec.*"
        "com/google/javascript/jscomp/CommandLineRunner\\$Flags"
        "com/google/javascript/jscomp/CommandLineRunner\\$Flags\\$WarningGuardErrorOptionHandler"
        "com/google/javascript/jscomp/CommandLineRunner\\$Flags\\$WarningGuardWarningOptionHandler"
        "com/google/javascript/jscomp/CommandLineRunner\\$Flags\\$WarningGuardOffOptionHandler"
        "com/google/javascript/jscomp/CommandLineRunner\\$Flags\\$WarningGuardSetter"

        "com.google.javascript.rhino.ScriptRuntime"

        //"com/google/javascript/jscomp/CommandLineRunnerTest\\$1"

        //"com.google.javascript.jscomp.Compiler\\$1" // ThreadFactory or Callable (which we lift)

        "com.google.javascript.rhino.Token"
        "com.google.javascript.rhino.Context"

        // enum used in Flags
        "com/google/javascript/jscomp/CheckLevel"
        "com.google.javascript.jscomp.CompilerOptions\\$DevMode"
        "com/google/javascript/jscomp/SourceMap\\$Format.*"
        "com/google/javascript/jscomp/CompilationLevel"
        "com/google/javascript/jscomp/WarningLevel"
        "com/google/javascript/jscomp/CommandLineRunner\\$FormattingOption"

        // enum because of valueOf
        "com.google.javascript.jscomp.CssRenamingMap\\$Style"

        "com.google.javascript.rhino.head.*"
        "com.google.javascript.jscomp.mozilla.rhino.*"

        "com.google.javascript.jscomp.jsonml.*"

        "com.google.common.base.Preconditions"
        "com.google.common.base.Charsets"
        //"com.google.common.base.Joiner"
        //"com.google.common.base.Suppliers"
        //"com.google.common.base.Function"
        //"com.google.common.base.Supplier"
        "com.google.common.base.CharMatcher.*"  // expensive to lift due to big loops
            "com.google.common.base.Platform.*"
            "com/google/common/base/SmallCharMatcher"
            "com/google/common/base/MediumCharMatcher"
        "com.google.common.base.Throwables"
        //"com.google.common.base.Predicates"
        //"com.google.common.base.Predicate"
        //"com.google.common.base.Strings"
        "com.google.common.base.Objects"
    ],

    "library-lifting": [
        "org.junit.Assert"
        "org.junit.internal.ExactComparisonCriteria"
        "org.junit.internal.ComparisonCriteria.*"
        "org.junit.internal.InexactComparisonCriteria"
        "junit.framework.Assert"
        "junit.framework.TestCase"

        // guava
        "com.google.common.collect.*"
    ],

    "library-not-lifting": [
        "sun.*"
        "org.hamcrest.*"

        "org.junit.ComparisonFailure" // extends Error
        "org.junit.internal.ArrayComparisonFailure"
        "junit.framework.AssertionFailedError"
        "junit.framework.ComparisonFailure"

        "com.google.common.io.*"


        //"com.google.common.primitives.Ints.*"

        // exceptions
        "org.json.JSONException"
        "org/mozilla/classfile/ClassFileWriter\\$ClassFileFormatException"

        // args4j
        "org.kohsuke.args4j.*"

        "org.json.*"
    ],

    "jdk-lifting": [
        "java.util.HashMap.*"
        "java.util.AbstractMap.*"
        "java.util.HashSet.*"
        "java.util.Set.*"
        "java.util.AbstractSet.*"
        "java.util.AbstractCollection.*"
        "java.util.AbstractList.*"
        "java.util.Map.*"
        "java.util.LinkedHashMap.*"
        "java.util.Collections.*"
        "java.util.TreeSet.*"
        "java.util.TreeMap.*"
        "java.util.NavigableMap.*"
        "java.util.ArrayDeque.*"
        "java.util.Deque"
        "java.util.Queue"
        "java.util.PriorityQueue"
        "java.util.AbstractQueue"
        "java.util.LinkedHashSet"
        "java.util.Objects"
        "java.util.BitSet"
        "java.util.Stack"
        "java.util.Vector"
        "java.util.IdentityHashMap.*"
        "java.util.concurrent.Callable"
        "java.util.SortedSet"
        "java.util.NavigableMap"
        "java.util.SortedMap"

        "java.lang.Enum"
    ],

    "jdk-not-lifting": [
        "java.lang.reflect.*"
        "java.lang.Boolean"
        "java.lang.Cloneable"

        "java.nio.charset.Charset"
        "java.nio.charset.CharsetEncoder"
        "java.io.*"
        "java.util.logging.*"
        "java.util.regex.*"
        "java.util.ResourceBundle"
        "java.util.Locale.*"

        "java.net.URL"
        "java.net.URI"

        "java.util.concurrent.(?!Callable).*"
        "java.lang.Runnable"

        "java.lang.ThreadLocal"
        "java.lang.Thread"
        "java.lang.StackTraceElement"
    ]
}